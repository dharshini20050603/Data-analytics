# -*- coding: utf-8 -*-
"""knn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qIhnkbuk6L8IVs-QhOpCVYxQ2nHkaG_t
"""

# Step 2: Import libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import mean_squared_error, r2_score
from google.colab import files

# Step 3: Upload the CSV file
uploaded = files.upload()

# Step 4: Load the uploaded CSV
df = pd.read_csv("loan_data.csv")
print("✅ Data Loaded Successfully!")
df.head()

# Step 5: Define features and target
X = df.drop("Loan_Approved", axis=1)
y = df["Loan_Approved"]

# Step 6: Scale the features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Step 7: Train/test split
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

# Step 8: Train KNN Regressor
knn = KNeighborsRegressor(n_neighbors=5)
knn.fit(X_train, y_train)

# Step 9: Predict and evaluate
y_pred = knn.predict(X_test)
print("R² Score:", r2_score(y_test, y_pred))
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))

# Step 10: Classification-like result
y_pred_class = [1 if val >= 0.5 else 0 for val in y_pred]
comparison = pd.DataFrame({"Actual": y_test.values, "Predicted": y_pred_class})
print("\n🔍 Prediction Comparison (First 10 rows):\n", comparison.head(10))

# Step 11: Test with a new applicant
new_user = pd.DataFrame({
    "Age": [28],
    "Income": [58000],
    "Credit_Score": [720],
    "Loan_Amount": [18000],
    "Loan_Term": [24],
    "Dependents": [1]
})

# Scale and predict
new_scaled = scaler.transform(new_user)
predicted_score = knn.predict(new_scaled)[0]
predicted_class = int(predicted_score >= 0.5)

print(f"\n📢 Loan Eligibility Prediction:\n  ➤ Score: {predicted_score:.2f}\n  ➤ Eligible: {'Yes' if predicted_class else 'No'}")