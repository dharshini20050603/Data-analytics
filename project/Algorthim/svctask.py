# -*- coding: utf-8 -*-
"""SVCTASK.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SCoiUtzjlK6R-kwWJxB_ps0t2w4jsZfV
"""

from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split, GridSearchCV
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

digits = load_digits()
X = digits.data
y = digits.target

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

svm_linear = SVC(kernel='linear')
svm_linear.fit(X_train, y_train)
pred_linear = svm_linear.predict(X_test)
acc_linear = accuracy_score(y_test, pred_linear)
print(f"Accuracy with Linear Kernel: {acc_linear:.4f}")

svm_rbf = SVC(kernel='rbf')
svm_rbf.fit(X_train, y_train)
pred_rbf = svm_rbf.predict(X_test)
acc_rbf = accuracy_score(y_test, pred_rbf)
print(f"Accuracy with RBF Kernel: {acc_rbf:.4f}")

param_grid = {
    'C': [0.1, 1, 10, 100],          # Regularization
    'gamma': [0.001, 0.01, 0.1, 1],  # Kernel coefficient
    'kernel': ['rbf']               # Focusing on RBF kernel
}

grid = GridSearchCV(SVC(), param_grid, refit=True, cv=5, verbose=1, n_jobs=-1)
grid.fit(X_train, y_train)

print("\nBest Parameters:", grid.best_params_)
best_model = grid.best_estimator_
best_preds = best_model.predict(X_test)
best_acc = accuracy_score(y_test, best_preds)
print(f"Best Accuracy after tuning: {best_acc:.4f}")