# -*- coding: utf-8 -*-
"""Kmean iris

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UAzM1DkYnEd6rNv4j3d_6BSyOClUXRGn
"""

# Commented out IPython magic to ensure Python compatibility.
from sklearn.cluster import KMeans
import pandas as pd
from sklearn.preprocessing import MinMaxScaler
from matplotlib import pyplot as plt
# %matplotlib inline

from google.colab import files
uploaded = files.upload()

df=pd.read_csv('Iris.csv')

df.head()

km=KMeans(n_clusters=3)
y_predicted=km.fit_predict(df[['PetalLengthCm','PetalWidthCm']])
y_predicted

km.cluster_centers_

df['cluster']=y_predicted

km=KMeans(n_clusters=3)
y_predicted=km.fit_predict(df[['PetalLengthCm','PetalWidthCm']])
y_predicted

df1=df[df.cluster==0]
df2=df[df.cluster==1]
df3=df[df.cluster==2]
plt.scatter(df1.PetalLengthCm,df1['PetalWidthCm'],color='green')
plt.scatter(df2.PetalLengthCm,df2['PetalWidthCm'],color='red')
plt.scatter(df3.PetalLengthCm,df3['PetalWidthCm'],color='black')
plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color='purple',marker='*',label='centroid')
plt.legend()

sse = []
k_rng = range(1,10)
for k in k_rng:
    km = KMeans(n_clusters=k)
    km.fit(df[['PetalLengthCm', 'PetalWidthCm']])
    sse.append(km.inertia_)

plt.xlabel('K')
plt.ylabel('Sum of Squared Error (SSE)')
plt.plot(k_rng,sse)