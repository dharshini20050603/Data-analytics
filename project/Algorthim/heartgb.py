# -*- coding: utf-8 -*-
"""HeartGB.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16KBxXytYdMYSSpYocsAg5d4j3m0x5aEh
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_breast_cancer
cancer=load_breast_cancer()
from sklearn.model_selection import train_test_split
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.metrics import accuracy_score,confusion_matrix,classification_report

from google.colab import files


uploaded = files.upload()

x=pd.DataFrame(cancer.data,columns=cancer.feature_names)
y=pd.Series(cancer.target)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

model = GradientBoostingClassifier(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)
model.fit(x_train, y_train)

y_pred = model.predict(x_test)
acc = accuracy_score(y_test, y_pred)
print("Accuracy:", acc)
print("\confusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

importances = model.feature_importances_
indices = np.argsort(importances)[::-1]
feature_names = x_train.columns

plt.figure(figsize=(10, 6))
plt.title("Feature Importances")
plt.bar(range(x_train.shape[1]), importances[indices], color="teal",align="center")
plt.xticks(range(x_train.shape[1]), feature_names[indices], rotation=90)
plt.tight_layout()
plt.show()